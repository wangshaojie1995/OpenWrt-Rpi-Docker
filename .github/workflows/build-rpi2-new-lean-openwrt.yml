#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Raspberry Pi 2 Lean's OpenWrt

on:
  repository_dispatch:
    types: [rpi2, rpi]
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config/lean/bcm27xx/rpi2-lean-target.config
  DEVICE: openwrt-bcm27xx-bcm2709-rpi-2
  DIY_SH: scripts/lean-openwrt.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804) tree
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Clone Source Code
        run: |
          df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: Update Feeds
        id: update
        run: |
          cd openwrt
          echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
          mkdir customfeeds
          git clone --depth=1 https://github.com/coolsnowwolf/packages customfeeds/packages
          git clone --depth=1 https://github.com/coolsnowwolf/luci customfeeds/luci
          chmod +x ../scripts/*.sh
          ../scripts/hook-feeds.sh

      - name: Install Feeds
        run: |
          cd $OPENWRTROOT
          ./scripts/feeds install -a

      - name: Load Custom Configuration
        run: |
          [ -e files ] && mv files $OPENWRTROOT/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRTROOT/.config
          cat config/lean/bcm27xx/rpi-lean-extra.config >> $OPENWRTROOT/.config
          cd $OPENWRTROOT
          ../$DIY_SH
          ../scripts/preset-clash-core.sh armv7
          ../scripts/preset-terminal-tools.sh

      - name: Download Package
        id: package
        run: |
          cd $OPENWRTROOT
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile Packages
        id: compile
        run: |
          cd $OPENWRTROOT
          echo -e "$(nproc) thread compile"
          make tools/compile -j$(nproc) || make tools/compile -j1 V=s
          make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
          make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
          make diffconfig
          make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j1 V=s IGNORE_ERRORS=1
          make package/index
          cd $OPENWRTROOT/bin/packages/*
          PLATFORM=$(basename `pwd`)
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV
          cd $OPENWRTROOT/bin/targets/*
          TARGET=$(basename `pwd`)
          echo "TARGET=$TARGET" >> $GITHUB_ENV
          cd *
          SUBTARGET=$(basename `pwd`)
          echo "SUBTARGET=$SUBTARGET" >> $GITHUB_ENV
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Generate RootFS Archive
        if: steps.compile.outputs.status == 'success'
        id: generate
        run: |
          cd $OPENWRTROOT
          mkdir -p files/etc/opkg
          cp ../data/opkg/distfeeds-18.06-remote.conf files/etc/opkg/distfeeds.conf
          sed -i "s/subtarget/$SUBTARGET/g" files/etc/opkg/distfeeds.conf
          sed -i "s/target\//$TARGET\//g" files/etc/opkg/distfeeds.conf
          sed -i "s/platform/$PLATFORM/g" files/etc/opkg/distfeeds.conf
          make package/install -j$(nproc) || make package/install -j1 V=s
          make target/install -j$(nproc) || make target/install -j1 V=s
          make checksum
          echo "::set-output name=status::success"

      - name: Build & Push Docker Image To Dockerhub
        run: |
          cd openwrt/bin/targets/$TARGET/$SUBTARGET/
          docker import $DEVICE-rootfs.tar.gz ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:rpi2
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PWD }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:rpi2
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:rpi2 ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:latest

      - name: Push Docker Image To Aliyun Docker Registry
        run: |
          docker login -u ${{ secrets.ALIYUN_USERNAME }} -p ${{ secrets.ALIYUN_PWD }} registry.cn-shanghai.aliyuncs.com
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:rpi2 registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:latest
          docker push registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:latest
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:rpi2 registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:rpi2
          docker push registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:rpi2
          
